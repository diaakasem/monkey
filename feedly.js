// Generated by IcedCoffeeScript 1.6.2d
(function() {


  // ==UserScript==
// @name        Feedly Enhancer
// @namespace   http://diaa.me/monkey/feedly.enhancer
// @version     0.7
// @description Removes unwanted entries from feedly and highlights the important stuff
// @match       *.feedly.com/*
// @require     http://code.jquery.com/jquery-1.8.3.min.js
// @copyright   2012+, You
// ==/UserScript==;

  $(document).ready(function() {
    var DivContains, doneClass, highlighted, parentSelector, removeSelector, removed;
    removed = [".NET", "Visual studio", "API Spotlight:", "API:", "APIs Used", "Asp.net", "ASP.NET", "ASP.net", "App42", "Azure", "Backbone", "C#", "Dojo", "Enterprise Java", "ExtJs", "GWT", "JSF", "JSP", "Lisp", "MicroSoft", "Microsoft", "New APIs", "PhoneGap", "Power Shell", "PowerShell", "TypeScript", "Typescript", "Visual Studio", "Windows", "asp.net", "microsoft", "windows"];
    highlighted = [
      {
        name: ["javascript", "JavaScript", "Javascript", "JAVASCRIPT"],
        color: "#fff8ee"
      }, {
        name: [".js", ".JS"],
        color: "#BBB"
      }, {
        name: ["angular", "Angular"],
        color: "#b5d418"
      }, {
        name: ["D3", "d3"],
        color: "#14a9df"
      }, {
        name: ["test", "Test"],
        color: "#f065b5"
      }, {
        name: ["node", "Node"],
        color: "#df7614"
      }
    ];
    doneClass = 'done';
    removeSelector = "div.condensedTools img[title=\"Mark as read and hide\"]";
    parentSelector = "div.u0Entry";
    DivContains = function(name, fn) {
      var parents, selected;
      parents = void 0;
      selected = $("" + parentSelector + " a:not('.done'):contains(" + name + ")");
      if (selected.length) {
        parents = selected.parents(parentSelector);
        selected.addClass(doneClass);
        fn(parents);
      }
      selected = $("span.u0summary:not('." + doneClass + "'):contains(" + name + ")");
      if (selected.length) {
        parents = selected.parents(parentSelector);
        selected.addClass(doneClass);
        return fn(parents);
      }
    };
    return setInterval((function() {
      $.each(removed, function(i, item) {
        return DivContains(item, function(parents) {
          return parents.find(removeSelector).click();
        });
      });
      $.each(highlighted, function(i, item) {
        return $.each(item.name, function(j, name) {
          return DivContains(name, function(parents) {
            return parents.css("background-color", item.color);
          });
        });
      });
      return $("" + parentSelector + " a").click(function(e) {
        var parents;
        parents = $(this).parents(parentSelector);
        return parents.find(removeSelector).click();
      });
    }), 5000);
  });

}).call(this);

/*
//@ sourceMappingURL=feedly.map
*/
